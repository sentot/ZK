;;;
;;; Tarski's fixedpoint theorem
;;;

(load setrules)
(load cap)
(load fn)

(function is-monotonic (f x) ()
  (and (in f (fn!fun (powerset x) (powerset x)))
       (all (a b)
	 (implies (and (subset a b)
		       (subset b x))
		  (subset (fn!apply f a)
			  (fn!apply f b))))))

(axiom monotonic-property (f x a b)
    (implies (and (is-monotonic f x)
		  (subset a b)
		  (subset b x))
	     (and (subset (fn!apply f a) (fn!apply f b))
		  (subset (fn!apply f b) x))))
(INVOKE IS-MONOTONIC)
(WITH-ENABLED (FN!IN-FUN) (REWRITE))
(USE FN!APPLY-IN-RAN (F F) (X B))
(REARRANGE)
(EQUALITY-SUBSTITUTE (REL!DOM F))
(INVOKE (SUBSET (REL!RAN F) (POWERSET X)))
(REWRITE)

(rule dom-monotonic (f x)
  (implies (is-monotonic f x)
	   (= (rel!dom f)
	      (powerset x))))
(INVOKE IS-MONOTONIC)
(WITH-ENABLED (FN!IN-FUN) (REWRITE))

(zf-function superpoints (f)
  (select (a (rel!dom f))
    (subset (fn!apply f a) a)))

(axiom superpoints-non-empty (f x)
  (implies (is-monotonic f x)
	   (in x (superpoints f))))
(USE MONOTONIC-PROPERTY (F F) (X X) (A X) (B X))
(REWRITE)

(axiom superpoints-non-empty-2 (f x)
  (implies (is-monotonic f x)
	   (not (= (superpoints f) (nullset)))))
(USE =.EXTENSIONAL (X (SUPERPOINTS F)) (Y (NULLSET)))
(USE SUPERPOINTS-NON-EMPTY (F F) (X X))
(USE NULLSET.DEFINITION)
(SIMPLIFY)
(INSTANTIATE (E X))
(SIMPLIFY)

(function fix (f) ()
  (cap!cap (superpoints f)))

(axiom prop-2 (f x a)
  (implies (and (is-monotonic f x)
		(in a (superpoints f)))
	   (subset (fix f) a)))
(INVOKE FIX)
(USE CAP!CAP-SUBSET-MEMBER (X A) (Y (SUPERPOINTS F)))
(SIMPLIFY)

(axiom prop-3 (f x)
  (implies (is-monotonic f x)
	   (subset (fix f) x)))
(INVOKE FIX)
(USE SUPERPOINTS-NON-EMPTY (F F) (X X))
(REWRITE)

(axiom prop-4 (f x b)
  (implies (and (is-monotonic f x)
		(in b (superpoints f)))
	   (subset (fn!apply f (fix f)) b)))
(USE MONOTONIC-PROPERTY (F F) (X X) (A (FIX F)) (B B))
(SPLIT (AND (IS-MONOTONIC F X)
	    (IN B (SUPERPOINTS F))))
(INVOKE FIX)
(REWRITE)

(axiom prop-5 (f x)
  (implies (is-monotonic f x)
	   (subset (fn!apply f (fix f)) (fix f))))
(USE CAP!SUBSET-CAP (X (FN!APPLY F (FIX F))) (Y (SUPERPOINTS F)))
(USE PROP-4 (F F) (X X))
(USE SUPERPOINTS-NON-EMPTY-2 (F F) (X X))
(INVOKE FIX)
(SIMPLIFY)

(axiom prop-6 (f x)
  (implies (is-monotonic f x)
	   (in (fix f) (superpoints f))))
(USE PROP-3 (F F) (X X))
(USE PROP-5 (F F) (X X))
(REWRITE)

(axiom prop-7 (f x b)
  (implies (and (is-monotonic f x)
		(in b (superpoints f)))
	   (in (fn!apply f b) (superpoints f))))
(USE MONOTONIC-PROPERTY (F F) (X X) (A (FN!APPLY F B)) (B B))
(REWRITE)

(axiom prop-8 (f x)
  (implies (is-monotonic f x)
	   (subset (fix f) (fn!apply f (fix f)))))
(USE PROP-7 (F F) (X X) (B (FIX F)))
(USE PROP-6 (F F) (X X))
(SIMPLIFY)
(INVOKE FIX)
(WITH-DISABLED (SUPERPOINTS) (REWRITE))

(axiom fix-in-dom (f x)
  (implies (is-monotonic f x)
	   (in (fix f) (rel!dom f))))
(USE PROP-3 (F F) (X X))
(SIMPLIFY)
(INVOKE IS-MONOTONIC)
(WITH-ENABLED (FN!IN-FUN) (REWRITE))
(EQUALITY-SUBSTITUTE (REL!DOM F))
(REWRITE)

(axiom fix-in-dom-2 (f x)
  (implies (is-monotonic f x)
	   (subset (fix f) x)))
(USE PROP-3 (F F) (X X))
(SIMPLIFY)

(axiom fix-is-fixedpoint (f x)
  (implies (is-monotonic f x)
	   (= (fn!apply f (fix f)) (fix f))))
(USE =.EXTENSIONAL.SUBSET (X (FN!APPLY F (FIX F))) (Y (FIX F)))
(USE PROP-5 (F F) (X X))
(USE PROP-8 (F F) (X X))
(SIMPLIFY)

(axiom fix-is-least-superpoint (f x a)
  (implies (and (is-monotonic f x)
		(subset a x)
		(subset (fn!apply f a) a))
	   (subset (fix f) a)))
(USE PROP-2 (F F) (X X) (A A))
(REARRANGE)
(REWRITE)

(axiom fix-is-least-fixedpoint (f x a)
  (implies (and (is-monotonic f x)
		(subset a x)
		(= (fn!apply f a) a))
	   (subset (fix f) a)))
(USE FIX-IS-LEAST-SUPERPOINT (F F) (X X) (A A))
(USE SUBSET.SELF (S A))
(SIMPLIFY)
