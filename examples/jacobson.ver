;;; Jacobson's Theorem
;;; 
;;; A ring satisfying x^3 = x is commutative.
;;;

(function-stub r0 ())
(function-stub r- (x))
(function-stub r+ (x y))
(function-stub r* (x y))

;;; basic algebraic ring axioms

(rule inverse-zero ()
  (= (r- (r0)) (r0)))

(rule left-zero (x)
  (= (r+ (r0) x) x))

(rule left-inverse (x)
  (= (r+ (r- x) x) (r0)))

(rule inverse-inverse (x)
  (= (r- (r- x))
     x))

(rule r+-associates (x y z)
  (= (r+ (r+ x y) z)
     (r+ x (r+ y z))))

(rule inverse-r+ (x y)
  (= (r- (r+ x y))
     (r+ (r- x) (r- y))))

(rule r+-commutes (x y)
  (= (r+ x y)
     (r+ y x)))

(rule r*-associates (x y z)
  (= (r* (r* x y) z)
     (r* x (r* y z))))

(rule distribute-left (x y z)
  (= (r* x (r+ y z))
     (r+ (r* x y) (r* x z))))

(rule distribute-right (x y z)
  (= (r* (r+ x y) z)
     (r+ (r* x z) (r* y z))))

;;; Some additional rules

(rule right-zero (x)
  (= (r+ x (r0)) x))
(USE LEFT-ZERO (X X))
(REWRITE)

(rule right-inverse (x)
  (= (r+ x (r- x)) (r0)))
(USE LEFT-INVERSE (X X))
(REWRITE)

(rule right-inverse-assoc (x y)
  (= (r+ x (r+ (r- x) y))
     y))
;;; Proof:
;;; (r+ x (r+ (r- x) y))
;;; = (r+-associates) <=
;;; (r+ (r+ x (r- x)) y)
;;; = (right-inverse) =>
;;; (r+ (r0) y)
;;; = (right-zero) =>
;;; y
(USE R+-ASSOCIATES (X X) (Y (R- X)) (Z Y))
(REWRITE)

(rule left-inverse-assoc (x y)
  (= (r+ (r- x) (r+ x y))
     y))
;;; similar to right-inverse-assoc
(USE R+-ASSOCIATES (X (R- X)) (Y X) (Z Y))
(REWRITE)

(axiom left-cancellation (x y z)
  (implies (= (r+ x y) (r+ x z))
	   (= y z)))
;;; Proof:
;;; (= (r+ x y) (r+ x z))
;;; => (substitution)
;;; (= (r+ (r- x) (r+ x y)) (r+ (r- x) (r+ x z)))
;;; = (left-inverse-assoc) =>
;;; (= y z)
(USE LEFT-INVERSE-ASSOC (X X)(Y Y))
(USE LEFT-INVERSE-ASSOC (X X)(Y Z))
(SIMPLIFY)

(axiom diff-0-implies-equal (x y)
  (implies (= (r+ x (r- y)) (r0))
	   (= x y)))
(USE R+-ASSOCIATES (X X) (Y (R- Y)) (Z Y))
(SPLIT (= (R+ X (R- Y)) (r0)))
(REWRITE)

;;; the lemmas assumed by Herman, here with proofs

(rule r*-0-left (x)
  (= (r* (r0) x) (r0)))
;;; Proof:
;;; (= (r* (r0) x) (r0))
;;; <= left cancellation
;;; (= (r+ (r* x x) (r* (r0) x)) (r+ (r* x x) (r0)))
;;; = (left-zero) =>
;;; (= (r+ (r* x x) (r* (r0) x)) (r* x x))
;;; = (distribute-right) <=
;;; (= (r* (r+ x (r0)) x) (r* x x))
;;; = (right-zero) =>
;;; (= (r* x x) (r* x x))
;;; = (trivially)
;;; (true)
(USE LEFT-CANCELLATION (X (R* X X)) (Y (R* (R0) X)) (Z (R0)))
(USE DISTRIBUTE-RIGHT (X X) (Y (R0)) (Z X))
(REWRITE)

(rule r*-0-right (x)
  (= (r* x (r0)) (r0)))
;;; Proof:
;;; (= (r* x (r0)) (r0))
;;; <= (left-cancellation)
;;; (= (r+ (r* x x) (r* x (r0))) (r+ (r* x x) (r0)))
;;; = (left-zero) =>
;;; (= (r+ (r* x x) (r* x (r0))) (r* x x))
;;; = (distribute-left) <=
;;; (= (r* x (r+ x (r0))) (r* x x))
;;; = (right-zero) =>
;;; (= (r* x x) (r* x x))
;;; = (trivially)
;;; (true)
(USE LEFT-CANCELLATION (X (R* X X)) (Y (R* X (R0))) (Z (R0)))
(USE DISTRIBUTE-LEFT (X X) (Y X) (Z (R0)))
(REWRITE)

(rule *-inverse-left (x y)
  (= (r* (r- x) y)
     (r- (r* x y))))
;;; Proof:
;;; (= (r* (r- x) y) (r- (r* x y))
;;; <= (left-cancellation)
;;; (= (r+ (r* x y) (r* (r- x) y)) (r+ (r* x y) (r- (r* x y)))
;;; = (right-inverse) =>
;;; (= (r+ (r* x y) (r* (r- x) y)) (r0))
;;; = (distribute-right) <=
;;; (= (r* (r+ x (r- x)) y) (r0))
;;; = (right-inverse) =>
;;; (= (r0) (r0))
;;; = (trivially)
;;; (true)
(USE LEFT-CANCELLATION (X (R* X Y)) (Y (R* (R- X) Y)) (Z (R- (R* X Y))))
(USE DISTRIBUTE-RIGHT (X X) (Y (R- X)) (Z Y))
(REWRITE)

(rule *-inverse-right (x y)
  (= (r* x (r- y))
     (r- (r* x y))))
;;; Proof as above
(USE LEFT-CANCELLATION (X (R* X Y)) (Y (R* X (R- Y))) (Z (R- (R* X Y))))
(USE DISTRIBUTE-LEFT (X X) (Y Y) (Z (R- Y)))
(REWRITE)

;;; Now the extra axiom

(rule cube (x)
  (= (r* x (r* x x)) x))

;;; Now the proof

(rule cube-1 (x y)
  (= (r* x (r* x (r* x y)))
     (r* x y)))
(USE R*-ASSOCIATES (X X) (Y (R* X X)) (Z Y))
(REWRITE)

(rule cube-2 (x y)
  (= (r* x (r* y (r* x (r* y (r* x y)))))
     (r* x y)))
(USE CUBE (X (R* X Y)))
(REWRITE)

;;; Lemmas a and b are used in proofs where Herman uses pre- or post- multiplication
;;;
;;; Lemmas a and b are stated in contrapositive form.
;;; My rough proof used lemma-a of the form
;;; (implies (= x (r0))
;;;          (= (r* x y) (r0)))
;;;
;;; Unfortunately, the EVES heuristics don't allow that to be used effectively, since
;;; simplification replaces the x in (r* x y) with (r0), and rewriting then elimates the
;;; whole term.  In the contrapositive form, the simplifier doesn't do the replacement.

(axiom lemma-a (x y)
  (implies (not (= (r* x y) (r0)))
	   (not (= x (r0)))))
(SPLIT (= X (R0)))
(REWRITE)

(axiom lemma-b (x y)
  (implies (not (= (r* x y) (r0)))
	   (not (= y (r0)))))
(SPLIT (= Y (R0)))
(REWRITE)

(axiom lemma-1 (x)
  (implies (= (r* x x) (r0))
	   (= x (r0))))
;;; Proof:
;;; (= (r* x x) (r0))
;;; => (lemma-b)
;;; (= (r* x (r* x x)) (r0))
;;; = (cube) =>
;;; (= x (r0))
(USE LEMMA-B (X X) (Y (R* X X)))
(REWRITE)

;;; Lemma c is a variation of lemma 1 that gets used in the proof of lemma 4.

(axiom lemma-c (x y)
  (implies (= (r* x (r* y y)) (r0))
	   (= (r* x y) (r0))))
;;; Proof:
;;; (= (r* x (r* y y)) (r0))
;;; => (lemma-a)
;;; (= (r* (r* x (r* y y)) y) (r0))
;;; = (r*-associates) =>
;;; (= (r* x (r* y (r* y y))) (r0))
;;; = (cube) =>
;;; (= (r* x y) (r0))
(USE LEMMA-A (X (R* X (R* Y Y))) (Y Y))
(REWRITE)

(axiom lemma-2 (x y)
  (implies (= (r* x y) (r0))
	   (= (r* y x) (r0))))
(USE LEMMA-1 (X (R* Y X)))
(USE LEMMA-A (X (R* X Y)) (Y X))
;;; You would think I would need to
;;; (USE LEMMA-B (X Y) (Y (R* X (R* Y X))))
;;; as well, but it turns out to be redundant here
;;; due to the same mechanism that made me state
;;; lemmas a and b in contrapositive.  You win some!
(REWRITE)

(rule lemma-3 (x y)
  (= (r* x (r* x (r* y x)))
     (r* y x)))
(USE LEMMA-2 (X X) (Y (R+ Y (R- (R* X (R* X Y))))))
(USE DIFF-0-IMPLIES-EQUAL (X (R* Y X)) (Y (R* X (R* X (R* Y X)))))
(REWRITE)

(rule lemma-3-post-multiplied (x y z)
  (= (r* x (r* x (r* y (r* x z))))
     (r* y (r* x z))))
(USE R*-ASSOCIATES (X X) (Y (R* X (R* Y X))) (Z Z))
(REWRITE)

(axiom lemma-4 (x y)
  (= (r* (r+ (r* x y) (r- (r* y x))) (r* y x))
     (r0)))
(USE LEMMA-C (X (R+ (R* X Y) (R- (R* Y X)))) (Y (R* Y X)))
(REWRITE)

(rule lemma-4-rule (x y)
  (= (r* x (r* y (r* y x)))
     (r* y (r* x (r* y x)))))
(USE DIFF-0-IMPLIES-EQUAL (X (R* X (R* Y (R* Y X)))) (Y (R* Y (R* X (R* Y X)))))
(USE LEMMA-4 (X X)(Y Y))
(REWRITE)

(rule commuted-cancelation (x y)
  (= (r+ (r- x) (r+ y x))
     y))
(REWRITE)

(axiom r*-commutes (x y)
  (= (r* x y) (r* y x)))
(USE DIFF-0-IMPLIES-EQUAL (X (R* X Y)) (Y (R* Y X)))
(USE LEMMA-1 (X (R+ (R* X Y) (R- (R* Y X)))))
(REWRITE)
