
Reading "/home/sentot/zk/version1/ZK/examples/zseqspec.ver"
Warning RULE-LOOPS for FN!FUNCTION-EXTENSIONALITY:
 The rule FN!FUNCTION-EXTENSIONALITY loops upon itself.
IS-SEQUENCE
TYPE-OF-IS-SEQUENCE
Beginning proof of TYPE-OF-IS-SEQUENCE ...
(= (TYPE-OF (IS-SEQUENCE X)) (BOOL))
IS-SEQUENCE-FACTS
Beginning proof of IS-SEQUENCE-FACTS ...
(IMPLIES (IS-SEQUENCE X)
 (AND (FN!IS-FUNCTION X) (FINITE!IS-FINITE X)
  (= (REL!DOM X) (RANGE 1 (FINITE!CARD X)))))
IS-SEQUENCE-SUBGOAL
Beginning proof of IS-SEQUENCE-SUBGOAL ...
(IMPLIES (AND (IN N (NAT!NAT)) (FN!IS-FUNCTION X) (= (REL!DOM X) (RANGE 1 N)))
 (AND (IS-SEQUENCE X) (= (FINITE!CARD X) N)))
IS-SEQUENCE-NULLSET
Beginning proof of IS-SEQUENCE-NULLSET ...
(= (IS-SEQUENCE (NULLSET)) (TRUE))
SEQUENCE-OF
IN-SEQUENCE-OF
Beginning proof of IN-SEQUENCE-OF ...
(= (IN S (SEQUENCE-OF X)) (AND (IS-SEQUENCE S) (SUBSET (REL!RAN S) X)))
NONEMPTY-SEQUENCE-OF
IN-NONEMPTY-SEQUENCE-OF
Beginning proof of IN-NONEMPTY-SEQUENCE-OF ...
(= (IN S (NONEMPTY-SEQUENCE-OF X))
 (AND (IS-SEQUENCE S) (NOT (= S (NULLSET))) (SUBSET (REL!RAN S) X)))
APPEND
IS-FUNCTION-APPEND
Beginning proof of IS-FUNCTION-APPEND ...
(IMPLIES (AND (IS-SEQUENCE X) (IS-SEQUENCE Y))
 (= (FN!IS-FUNCTION (APPEND X Y)) (TRUE)))
DOM-APPEND
Beginning proof of DOM-APPEND ...
(IMPLIES (AND (IS-SEQUENCE X) (IS-SEQUENCE Y))
 (= (REL!DOM (APPEND X Y)) (RANGE 1 (+ (FINITE!CARD X) (FINITE!CARD Y)))))
RAN-APPEND
Beginning proof of RAN-APPEND ...
(IMPLIES (AND (IS-SEQUENCE X) (IS-SEQUENCE Y))
 (= (REL!RAN (APPEND X Y)) (UNION (REL!RAN X) (REL!RAN Y))))
APPLY-APPEND
Beginning proof of APPLY-APPEND ...
(IMPLIES
 (AND (IS-SEQUENCE X) (IS-SEQUENCE Y)
  (IN N (RANGE 1 (FINITE!CARD (APPEND X Y)))))
 (= (FN!APPLY (APPEND X Y) N)
  (IF (<= N (FINITE!CARD X)) (FN!APPLY X N)
   (FN!APPLY Y (- N (FINITE!CARD X))))))
FINITE-APPEND
Beginning proof of FINITE-APPEND ...
(IMPLIES (AND (IS-SEQUENCE X) (IS-SEQUENCE Y))
 (= (FINITE!IS-FINITE (APPEND X Y)) (TRUE)))
CARD-APPEND
Beginning proof of CARD-APPEND ...
(IMPLIES (AND (IS-SEQUENCE X) (IS-SEQUENCE Y))
 (= (FINITE!CARD (APPEND X Y)) (+ (FINITE!CARD X) (FINITE!CARD Y))))
IS-SEQUENCE-APPEND
Beginning proof of IS-SEQUENCE-APPEND ...
(IMPLIES (AND (IS-SEQUENCE X) (IS-SEQUENCE Y))
 (= (IS-SEQUENCE (APPEND X Y)) (TRUE)))
APPEND-NULLSET-LEFT
Beginning proof of APPEND-NULLSET-LEFT ...
(IMPLIES (IS-SEQUENCE X) (= (APPEND (NULLSET) X) X))
APPEND-NULLSET-RIGHT
Beginning proof of APPEND-NULLSET-RIGHT ...
(IMPLIES (IS-SEQUENCE X) (= (APPEND X (NULLSET)) X))
APPEND-ASSOCIATIVE
Beginning proof of APPEND-ASSOCIATIVE ...
(IMPLIES (AND (IS-SEQUENCE X) (IS-SEQUENCE Y) (IS-SEQUENCE Z))
 (= (APPEND (APPEND X Y) Z) (APPEND X (APPEND Y Z))))
UNIT-SEQ
IS-FUNCTION-UNIT-SEQ
Beginning proof of IS-FUNCTION-UNIT-SEQ ...
(= (FN!IS-FUNCTION (UNIT-SEQ X)) (TRUE))
DOM-UNIT-SEQ
Beginning proof of DOM-UNIT-SEQ ...
(= (REL!DOM (UNIT-SEQ X)) (UNIT 1))
RAN-UNIT-SEQ
Beginning proof of RAN-UNIT-SEQ ...
(= (REL!RAN (UNIT-SEQ X)) (UNIT X))
APPLY-UNIT-SEQ
Beginning proof of APPLY-UNIT-SEQ ...
(= (FN!APPLY (UNIT-SEQ X) 1) X)
FINITE-UNIT-SEQ
Beginning proof of FINITE-UNIT-SEQ ...
(= (FINITE!IS-FINITE (UNIT-SEQ X)) (TRUE))
CARD-UNIT-SEQ
Beginning proof of CARD-UNIT-SEQ ...
(= (FINITE!CARD (UNIT-SEQ X)) 1)
IS-SEQUENCE-UNIT-SEQ
Beginning proof of IS-SEQUENCE-UNIT-SEQ ...
(= (IS-SEQUENCE (UNIT-SEQ X)) (TRUE))
HEAD
ZLAST
TAIL
FRONT
IS-FUNCTION-TAIL
Beginning proof of IS-FUNCTION-TAIL ...
(IMPLIES (IS-SEQUENCE S) (= (FN!IS-FUNCTION (TAIL S)) (TRUE)))
DOM-TAIL
Beginning proof of DOM-TAIL ...
(IMPLIES (AND (IS-SEQUENCE S) (NOT (= S (NULLSET))))
 (= (REL!DOM (TAIL S)) (RANGE 1 (- (FINITE!CARD S) 1))))
RAN-TAIL
Beginning proof of RAN-TAIL ...
(SUBSET (REL!RAN (TAIL S)) (REL!RAN S))
APPLY-TAIL
Beginning proof of APPLY-TAIL ...
(IMPLIES (AND (IS-SEQUENCE S) (NOT (= S (NULLSET))) (IN N (REL!DOM (TAIL S))))
 (= (FN!APPLY (TAIL S) N) (FN!APPLY S (+ N 1))))
FINITE-TAIL
Beginning proof of FINITE-TAIL ...
(IMPLIES (IS-SEQUENCE S) (= (FINITE!IS-FINITE (TAIL S)) (TRUE)))
CARD-TAIL
Beginning proof of CARD-TAIL ...
(IMPLIES (AND (IS-SEQUENCE S) (NOT (= S (NULLSET))))
 (= (FINITE!CARD (TAIL S)) (- (FINITE!CARD S) 1)))
IS-SEQUENCE-TAIL
Beginning proof of IS-SEQUENCE-TAIL ...
(IMPLIES (IS-SEQUENCE S) (= (IS-SEQUENCE (TAIL S)) (TRUE)))
IS-FUNCTION-FRONT
Beginning proof of IS-FUNCTION-FRONT ...
(IMPLIES (IS-SEQUENCE S) (= (FN!IS-FUNCTION (FRONT S)) (TRUE)))
DOM-FRONT
Beginning proof of DOM-FRONT ...
(IMPLIES (AND (IS-SEQUENCE S) (NOT (= S (NULLSET))))
 (= (REL!DOM (FRONT S)) (RANGE 1 (- (FINITE!CARD S) 1))))
RAN-FRONT
Beginning proof of RAN-FRONT ...
(SUBSET (REL!RAN (FRONT S)) (REL!RAN S))
APPLY-FRONT
Beginning proof of APPLY-FRONT ...
(IMPLIES
 (AND (IS-SEQUENCE S) (NOT (= S (NULLSET))) (IN N (REL!DOM (FRONT S))))
 (= (FN!APPLY (FRONT S) N) (FN!APPLY S N)))
FINITE-FRONT
Beginning proof of FINITE-FRONT ...
(IMPLIES (IS-SEQUENCE S) (= (FINITE!IS-FINITE (FRONT S)) (TRUE)))
CARD-FRONT
Beginning proof of CARD-FRONT ...
(IMPLIES (AND (IS-SEQUENCE S) (NOT (= S (NULLSET))))
 (= (FINITE!CARD (FRONT S)) (- (FINITE!CARD S) 1)))
IS-SEQUENCE-FRONT
Beginning proof of IS-SEQUENCE-FRONT ...
(IMPLIES (IS-SEQUENCE S) (= (IS-SEQUENCE (FRONT S)) (TRUE)))
FRONT-NULLSET
Beginning proof of FRONT-NULLSET ...
(= (FRONT (NULLSET)) (NULLSET))
TAIL-NULLSET
Beginning proof of TAIL-NULLSET ...
(= (TAIL (NULLSET)) (NULLSET))
HEAD-APPEND-UNIT
Beginning proof of HEAD-APPEND-UNIT ...
(IMPLIES (IS-SEQUENCE S) (= (HEAD (APPEND (UNIT-SEQ X) S)) X))
TAIL-APPEND-UNIT
Beginning proof of TAIL-APPEND-UNIT ...
(IMPLIES (IS-SEQUENCE S) (= (TAIL (APPEND (UNIT-SEQ X) S)) S))
ZLAST-APPEND-UNIT
Beginning proof of ZLAST-APPEND-UNIT ...
(IMPLIES (IS-SEQUENCE S) (= (ZLAST (APPEND S (UNIT-SEQ X))) X))
FRONT-APPEND-UNIT
Beginning proof of FRONT-APPEND-UNIT ...
(IMPLIES (IS-SEQUENCE S) (= (FRONT (APPEND S (UNIT-SEQ X))) S))
SEQ-HEAD-TAIL
Beginning proof of SEQ-HEAD-TAIL ...
(IMPLIES (IS-SEQUENCE S)
 (OR (= S (NULLSET)) (= S (APPEND (UNIT-SEQ (HEAD S)) (TAIL S)))))
SEQ-FRONT-LAST
Beginning proof of SEQ-FRONT-LAST ...
(IMPLIES (IS-SEQUENCE S)
 (OR (= S (NULLSET)) (= S (APPEND (FRONT S) (UNIT-SEQ (ZLAST S))))))
REVERSE
IS-FUNCTION-REVERSE
Beginning proof of IS-FUNCTION-REVERSE ...
(IMPLIES (IS-SEQUENCE S) (= (FN!IS-FUNCTION (REVERSE S)) (TRUE)))
DOM-REVERSE
Beginning proof of DOM-REVERSE ...
(IMPLIES (IS-SEQUENCE S) (= (REL!DOM (REVERSE S)) (REL!DOM S)))
RAN-REVERSE
Beginning proof of RAN-REVERSE ...
(IMPLIES (IS-SEQUENCE S) (= (REL!RAN (REVERSE S)) (REL!RAN S)))
FINITE-REVERSE
Beginning proof of FINITE-REVERSE ...
(IMPLIES (IS-SEQUENCE S) (= (FINITE!IS-FINITE (REVERSE S)) (TRUE)))
CARD-REVERSE
Beginning proof of CARD-REVERSE ...
(IMPLIES (IS-SEQUENCE S) (= (FINITE!CARD (REVERSE S)) (FINITE!CARD S)))
IS-SEQUENCE-REVERSE
Beginning proof of IS-SEQUENCE-REVERSE ...
(IMPLIES (IS-SEQUENCE S) (= (IS-SEQUENCE (REVERSE S)) (TRUE)))
REVERSE-NULLSET
Beginning proof of REVERSE-NULLSET ...
(= (REVERSE (NULLSET)) (NULLSET))
REVERSE-UNIT
Beginning proof of REVERSE-UNIT ...
(= (REVERSE (UNIT-SEQ X)) (UNIT-SEQ X))
REVERSE-APPEND
Beginning proof of REVERSE-APPEND ...
(IMPLIES (AND (IS-SEQUENCE X) (IS-SEQUENCE Y))
 (= (REVERSE (APPEND X Y)) (APPEND (REVERSE Y) (REVERSE X))))
REVERSE-REVERSE
Beginning proof of REVERSE-REVERSE ...
(IMPLIES (IS-SEQUENCE S) (= (REVERSE (REVERSE S)) S))
HEAD-REVERSE
Beginning proof of HEAD-REVERSE ...
(IMPLIES (AND (IS-SEQUENCE S) (NOT (= S (NULLSET))))
 (= (HEAD (REVERSE S)) (ZLAST S)))
LAST-REVERSE
Beginning proof of LAST-REVERSE ...
(IMPLIES (AND (IS-SEQUENCE S) (NOT (= S (NULLSET))))
 (= (ZLAST (REVERSE S)) (HEAD S)))
REVERSE-FRONT
Beginning proof of REVERSE-FRONT ...
(IMPLIES (IS-SEQUENCE S) (= (REVERSE (FRONT S)) (TAIL (REVERSE S))))
REVERSE-TAIL
Beginning proof of REVERSE-TAIL ...
(IMPLIES (IS-SEQUENCE S) (= (REVERSE (TAIL S)) (FRONT (REVERSE S))))
FILTER
IS-FUNCTION-FILTER
Beginning proof of IS-FUNCTION-FILTER ...
(IMPLIES (IS-SEQUENCE S) (= (FN!IS-FUNCTION (FILTER S X)) (TRUE)))
RAN-FILTER
Beginning proof of RAN-FILTER ...
(IMPLIES (IS-SEQUENCE S) (= (REL!RAN (FILTER S X)) (INTER (REL!RAN S) X)))
FINITE-FILTER
Beginning proof of FINITE-FILTER ...
(IMPLIES (IS-SEQUENCE S) (= (FINITE!IS-FINITE (FILTER S X)) (TRUE)))
IS-SEQUENCE-FILTER
Beginning proof of IS-SEQUENCE-FILTER ...
(IMPLIES (IS-SEQUENCE S) (= (IS-SEQUENCE (FILTER S X)) (TRUE)))
FILTER-BY-SUPERSET-RAN
Beginning proof of FILTER-BY-SUPERSET-RAN ...
(IMPLIES (AND (IS-SEQUENCE S) (SUBSET (REL!RAN S) X)) (= (FILTER S X) S))
FILTER-NULLSET
Beginning proof of FILTER-NULLSET ...
(= (FILTER (NULLSET) X) (NULLSET))
FILTER-UNIT
Beginning proof of FILTER-UNIT ...
(= (FILTER (UNIT-SEQ X) Y) (IF (IN X Y) (UNIT-SEQ X) (NULLSET)))
FILTER-APPEND
Beginning proof of FILTER-APPEND ...
(IMPLIES (AND (IS-SEQUENCE X) (IS-SEQUENCE Y))
 (= (FILTER (APPEND X Y) Z) (APPEND (FILTER X Z) (FILTER Y Z))))
REVERSE-FILTER
Beginning proof of REVERSE-FILTER ...
(IMPLIES (IS-SEQUENCE S) (= (REVERSE (FILTER S X)) (FILTER (REVERSE S) X)))
FILTER-FILTER
Beginning proof of FILTER-FILTER ...
(IMPLIES (IS-SEQUENCE S) (= (FILTER (FILTER S X) Y) (FILTER S (INTER X Y))))
FILTER-BY-NULLSET
Beginning proof of FILTER-BY-NULLSET ...
(IMPLIES (IS-SEQUENCE S) (= (FILTER S (NULLSET)) (NULLSET)))
CARD-FILTER
Beginning proof of CARD-FILTER ...
(IMPLIES (IS-SEQUENCE S) (<= (FINITE!CARD (FILTER S X)) (FINITE!CARD S)))
Done.