
Reading "/home/sentot/zk/version1/ZK/examples/seqspec.ver"
IS-TACK
EMPTY
TACK
HEAD
TAIL
SIZE
LENGTH
Beginning proof of LENGTH ...
(IF (IS-TACK S) (M< (SIZE (TAIL S)) (SIZE S)) (TRUE))
LENGTH-NON-NEGATIVE
Beginning proof of LENGTH-NON-NEGATIVE ...
(>= (LENGTH S) 0)
TYPE-OF-IS-TACK
Beginning proof of TYPE-OF-IS-TACK ...
(= (TYPE-OF (IS-TACK S)) (BOOL))
IS-SEQUENCE
Beginning proof of IS-SEQUENCE ...
(IF (IS-TACK S) (M< (LENGTH (TAIL S)) (LENGTH S)) (TRUE))
TACK-HEAD-TAIL
Beginning proof of TACK-HEAD-TAIL ...
(IMPLIES (IS-TACK S) (= S (TACK (HEAD S) (TAIL S))))
EMPTYP-EMPTY
Beginning proof of EMPTYP-EMPTY ...
(= (IS-TACK (EMPTY)) (FALSE))
IS-TACK-TACK
Beginning proof of IS-TACK-TACK ...
(IS-TACK (TACK X S))
HEAD-TACK
Beginning proof of HEAD-TACK ...
(= (HEAD (TACK X S)) X)
TAIL-TACK
Beginning proof of TAIL-TACK ...
(= (TAIL (TACK X S)) S)
TACK-IS-INJECTIVE
Beginning proof of TACK-IS-INJECTIVE ...
(= (= (TACK X1 S1) (TACK X2 S2)) (AND (= X1 X2) (= S1 S2)))
SEQP
SEQP-DEFINITION
Beginning proof of SEQP-DEFINITION ...
(= (SEQP S) (IS-SEQUENCE S))
EMPTYP
EMPTYP-DEFINITION
Beginning proof of EMPTYP-DEFINITION ...
(= (EMPTYP S) (IMPLIES (IS-TACK S) (NOT (IS-SEQUENCE S))))
SEQ1
SEQ2
SEQ3
SEQ4
IS-SEQUENCE-EMPTY
Beginning proof of IS-SEQUENCE-EMPTY ...
(IS-SEQUENCE (EMPTY))
IS-SEQUENCE-TACK
Beginning proof of IS-SEQUENCE-TACK ...
(= (IS-SEQUENCE (TACK X S)) (IS-SEQUENCE S))
LENGTH-EMPTY
Beginning proof of LENGTH-EMPTY ...
(= (LENGTH (EMPTY)) 0)
LENGTH-TACK
Beginning proof of LENGTH-TACK ...
(= (LENGTH (TACK X S)) (+ 1 (LENGTH S)))
NOT-IS-TACK-FACTS
Beginning proof of NOT-IS-TACK-FACTS ...
(IMPLIES (NOT (IS-TACK X))
 (AND (= (LENGTH X) 0) (= (IS-SEQUENCE X) (= X (EMPTY)))))
JOIN
Beginning proof of JOIN ...
(IF (IS-TACK S1) (M< (LENGTH (TAIL S1)) (LENGTH S1)) (TRUE))
JOIN-TACK
Beginning proof of JOIN-TACK ...
(= (JOIN (TACK X S) T) (TACK X (JOIN S T)))
IS-TACK-JOIN
Beginning proof of IS-TACK-JOIN ...
(= (IS-TACK (JOIN S1 S2)) (OR (IS-TACK S1) (IS-TACK S2)))
IS-SEQUENCE-JOIN
Beginning proof of IS-SEQUENCE-JOIN ...
(= (IS-SEQUENCE (JOIN S1 S2)) (IS-SEQUENCE S2))
JOIN-ASSOCIATIVE
Beginning proof of JOIN-ASSOCIATIVE ...
(= (JOIN (JOIN S1 S2) S3) (JOIN S1 (JOIN S2 S3)))
JOIN-EMPTY-LEFT
Beginning proof of JOIN-EMPTY-LEFT ...
(= (JOIN (EMPTY) S) S)
JOIN-EMPTY-RIGHT
Beginning proof of JOIN-EMPTY-RIGHT ...
(IMPLIES (IS-SEQUENCE S) (= (JOIN S (EMPTY)) S))
LENGTH-JOIN
Beginning proof of LENGTH-JOIN ...
(= (LENGTH (JOIN S1 S2)) (+ (LENGTH S1) (LENGTH S2)))
REVERSE
Beginning proof of REVERSE ...
(IF (IS-TACK S) (M< (LENGTH (TAIL S)) (LENGTH S)) (TRUE))
REVERSE-NON-TACK
Beginning proof of REVERSE-NON-TACK ...
(IMPLIES (NOT (IS-TACK X)) (= (REVERSE X) (EMPTY)))
IS-TACK-REVERSE
Beginning proof of IS-TACK-REVERSE ...
(= (IS-TACK (REVERSE S)) (IS-TACK S))
IS-SEQUENCE-REVERSE
Beginning proof of IS-SEQUENCE-REVERSE ...
(= (IS-SEQUENCE (REVERSE S)) (TRUE))
LENGTH-REVERSE
Beginning proof of LENGTH-REVERSE ...
(= (LENGTH (REVERSE S)) (LENGTH S))
REVERSE-JOIN
Beginning proof of REVERSE-JOIN ...
(= (REVERSE (JOIN S1 S2)) (JOIN (REVERSE S2) (REVERSE S1)))
REVERSE-REVERSE
Beginning proof of REVERSE-REVERSE ...
(IMPLIES (IS-SEQUENCE S) (= (REVERSE (REVERSE S)) S))
IS-MEMBER
Beginning proof of IS-MEMBER ...
(IF (IS-TACK S) (M< (LENGTH (TAIL S)) (LENGTH S)) (TRUE))
IS-MEMBER-TACK
Beginning proof of IS-MEMBER-TACK ...
(= (IS-MEMBER E (TACK X S)) (OR (= E X) (IS-MEMBER E S)))
IS-MEMBER-JOIN
Beginning proof of IS-MEMBER-JOIN ...
(= (IS-MEMBER E (JOIN S1 S2)) (OR (IS-MEMBER E S1) (IS-MEMBER E S2)))
IS-MEMBER-REVERSE
Beginning proof of IS-MEMBER-REVERSE ...
(= (IS-MEMBER E (REVERSE S)) (IS-MEMBER E S))
MEMBERS
Beginning proof of MEMBERS ...
(IF (IS-TACK S) (M< (LENGTH (TAIL S)) (LENGTH S)) (TRUE))
MEMBERS-TACK
Beginning proof of MEMBERS-TACK ...
(= (MEMBERS (TACK X S)) (SETADD X (MEMBERS S)))
IN-MEMBERS
Beginning proof of IN-MEMBERS ...
(= (IN E (MEMBERS S)) (IS-MEMBER E S))
MEMBERS-JOIN
Beginning proof of MEMBERS-JOIN ...
(= (MEMBERS (JOIN S1 S2)) (UNION (MEMBERS S1) (MEMBERS S2)))
MEMBERS-REVERSE
Beginning proof of MEMBERS-REVERSE ...
(= (MEMBERS (REVERSE S)) (MEMBERS S))
FILTER
Beginning proof of FILTER ...
(IF (IS-TACK S) (M< (LENGTH (TAIL S)) (LENGTH S)) (TRUE))
FILTER-EMPTY
Beginning proof of FILTER-EMPTY ...
(= (FILTER X (EMPTY)) (EMPTY))
FILTER-TACK
Beginning proof of FILTER-TACK ...
(= (FILTER Y (TACK X S)) (IF (IN X Y) (TACK X (FILTER Y S)) (FILTER Y S)))
IS-SEQUENCE-FILTER
Beginning proof of IS-SEQUENCE-FILTER ...
(= (IS-SEQUENCE (FILTER X S)) (TRUE))
FILTER-BY-NULLSET
Beginning proof of FILTER-BY-NULLSET ...
(= (FILTER (NULLSET) S) (EMPTY))
FILTER-BY-ALL-MEMBERS
Beginning proof of FILTER-BY-ALL-MEMBERS ...
(IMPLIES (AND (IS-SEQUENCE S) (SUBSET (MEMBERS S) X)) (= (FILTER X S) S))
FILTER-JOIN
Beginning proof of FILTER-JOIN ...
(= (FILTER X (JOIN S T)) (JOIN (FILTER X S) (FILTER X T)))
REVERSE-FILTER
Beginning proof of REVERSE-FILTER ...
(= (REVERSE (FILTER X S)) (FILTER X (REVERSE S)))
IS-MEMBER-FILTER
Beginning proof of IS-MEMBER-FILTER ...
(= (IS-MEMBER E (FILTER X S)) (AND (IN E X) (IS-MEMBER E S)))
MEMBERS-FILTER
Beginning proof of MEMBERS-FILTER ...
(= (MEMBERS (FILTER X S)) (INTER X (MEMBERS S)))
FILTER-FILTER
Beginning proof of FILTER-FILTER ...
(= (FILTER X (FILTER Y S)) (FILTER (INTER X Y) S))
FILTER-NOT
Beginning proof of FILTER-NOT ...
(IF (IS-TACK S) (M< (LENGTH (TAIL S)) (LENGTH S)) (TRUE))
FILTER-NOT-EMPTY
Beginning proof of FILTER-NOT-EMPTY ...
(= (FILTER-NOT X (EMPTY)) (EMPTY))
FILTER-NOT-TACK
Beginning proof of FILTER-NOT-TACK ...
(= (FILTER-NOT Y (TACK X S))
 (IF (IN X Y) (FILTER-NOT Y S) (TACK X (FILTER-NOT Y S))))
IS-SEQUENCE-FILTER-NOT
Beginning proof of IS-SEQUENCE-FILTER-NOT ...
(= (IS-SEQUENCE (FILTER-NOT X S)) (TRUE))
FILTER-NOT-BY-NULLSET
Beginning proof of FILTER-NOT-BY-NULLSET ...
(IMPLIES (IS-SEQUENCE S) (= (FILTER-NOT (NULLSET) S) S))
FILTER-NOT-BY-ALL-MEMBERS
Beginning proof of FILTER-NOT-BY-ALL-MEMBERS ...
(IMPLIES (SUBSET (MEMBERS S) X) (= (FILTER-NOT X S) (EMPTY)))
FILTER-NOT-JOIN
Beginning proof of FILTER-NOT-JOIN ...
(= (FILTER-NOT X (JOIN S T)) (JOIN (FILTER-NOT X S) (FILTER-NOT X T)))
REVERSE-FILTER-NOT
Beginning proof of REVERSE-FILTER-NOT ...
(= (REVERSE (FILTER-NOT X S)) (FILTER-NOT X (REVERSE S)))
IS-MEMBER-FILTER-NOT
Beginning proof of IS-MEMBER-FILTER-NOT ...
(= (IS-MEMBER E (FILTER-NOT X S)) (AND (NOT (IN E X)) (IS-MEMBER E S)))
MEMBERS-FILTER-NOT
Beginning proof of MEMBERS-FILTER-NOT ...
(= (MEMBERS (FILTER-NOT X S)) (DIFF (MEMBERS S) X))
FILTER-NOT-FILTER-NOT
Beginning proof of FILTER-NOT-FILTER-NOT ...
(= (FILTER-NOT X (FILTER-NOT Y S)) (FILTER-NOT (UNION X Y) S))
FILTER-NOT-FILTER
Beginning proof of FILTER-NOT-FILTER ...
(= (FILTER-NOT X (FILTER Y S)) (FILTER (DIFF Y X) S))
FILTER-FILTER-NOT
Beginning proof of FILTER-FILTER-NOT ...
(= (FILTER X (FILTER-NOT Y S)) (FILTER (DIFF X Y) S))
NTH
Beginning proof of NTH ...
(IF (>= N 2) (M< (- N 1) N) (TRUE))
Warning RULE-LOOPS for EXTENSIONALITY:
 The rule EXTENSIONALITY loops upon itself.
EXTENSIONALITY
Beginning proof of EXTENSIONALITY ...
(IMPLIES (AND (IS-SEQUENCE S) (IS-SEQUENCE T))
 (= (= S T)
  (AND (= (LENGTH S) (LENGTH T))
   (ALL (I)
    (IMPLIES (AND (<= 1 I) (<= I (LENGTH S))) (= (NTH S I) (NTH T I)))))))
SEQUENCE-OF
IS-SEQUENCE-OF
IN-SEQUENCE-OF
Beginning proof of IN-SEQUENCE-OF ...
(= (IN S (SEQUENCE-OF X)) (AND (IS-SEQUENCE S) (SUBSET (MEMBERS S) X)))
SEQUENCE-OF-MONOTONIC
Beginning proof of SEQUENCE-OF-MONOTONIC ...
(= (SUBSET (SEQUENCE-OF X) (SEQUENCE-OF Y)) (SUBSET X Y))
Done.