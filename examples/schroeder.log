
Reading "/home/sentot/zk/version1/ZK/examples/schroeder.ver"
Warning RULE-LOOPS for FN!FUNCTION-EXTENSIONALITY:
 The rule FN!FUNCTION-EXTENSIONALITY loops upon itself.
H-FN
IN-H-FN
Beginning proof of IN-H-FN ...
(= (IN E (H-FN F G X Y))
 (AND (PAIR!IS-PAIR E) (SUBSET (PAIR!FST E) X)
  (= (PAIR!SND E) (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F (PAIR!FST E))))))))
Splitting
on (AND (PAIR!IS-PAIR E)
    (AND (SUBSET (PAIR!FST E) X)
     (= (PAIR!SND E)
      (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F (PAIR!FST E)))))))) generates
...
(IF
 (AND (PAIR!IS-PAIR E) (SUBSET (PAIR!FST E) X)
  (= (PAIR!SND E) (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F (PAIR!FST E)))))))
 (= (IN E (H-FN F G X Y))
  (AND (PAIR!IS-PAIR E) (SUBSET (PAIR!FST E) X)
   (= (PAIR!SND E)
    (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F (PAIR!FST E))))))))
 (= (IN E (H-FN F G X Y))
  (AND (PAIR!IS-PAIR E) (SUBSET (PAIR!FST E) X)
   (= (PAIR!SND E)
    (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F (PAIR!FST E)))))))))
Applying H-FN.DEFINITION gives ...
(IF
 (AND (PAIR!IS-PAIR E) (SUBSET (PAIR!FST E) X)
  (= (PAIR!SND E) (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F (PAIR!FST E)))))))
 (=
  (SOME (Z)
   (AND (IN Z (POWERSET X))
    (= E (PAIR!PAIR Z (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F Z))))))))
  (AND (PAIR!IS-PAIR E) (SUBSET (PAIR!FST E) X)
   (= (PAIR!SND E)
    (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F (PAIR!FST E))))))))
 (=
  (SOME (Z$0)
   (AND (IN Z$0 (POWERSET X))
    (= E (PAIR!PAIR Z$0 (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F Z$0))))))))
  (AND (PAIR!IS-PAIR E) (SUBSET (PAIR!FST E) X)
   (= (PAIR!SND E)
    (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F (PAIR!FST E)))))))))
Which simplifies
 when rewriting with POWERSET.DEFINITION
 forward chaining using PAIR!PAIR-COMPOSITION
 with the assumptions PAIR!FST-PAIR, PAIR!SND-PAIR, PAIR!PAIR-IS-PAIR,
SETRULES!SUBSET-DIFF-RELATION, PAIR!IS-PAIR-BOOL to ...
(IMPLIES
 (AND (PAIR!IS-PAIR E) (SUBSET (PAIR!FST E) X)
  (= (PAIR!SND E) (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F (PAIR!FST E)))))))
 (=
  (SOME (Z)
   (AND (SUBSET Z X)
    (= E (PAIR!PAIR Z (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F Z))))))))
  (TRUE)))
Instantiating (= Z (PAIR!FST E)) gives ...
(IMPLIES
 (AND (PAIR!IS-PAIR E) (SUBSET (PAIR!FST E) X)
  (= (PAIR!SND E) (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F (PAIR!FST E))))))
  (NOT
   (AND (SUBSET (PAIR!FST E) X)
    (= E
     (PAIR!PAIR (PAIR!FST E)
      (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F (PAIR!FST E))))))))))
 (SOME (Z)
  (AND (SUBSET Z X)
   (= E (PAIR!PAIR Z (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F Z)))))))))
Which simplifies
 forward chaining using PAIR!PAIR-COMPOSITION
 with the assumptions PAIR!FST-PAIR, PAIR!SND-PAIR, PAIR!PAIR-IS-PAIR,
SETRULES!SUBSET-DIFF-RELATION, PAIR!IS-PAIR-BOOL to ...
(TRUE)
IS-FUNCTION-H-FN
Beginning proof of IS-FUNCTION-H-FN ...
(= (FN!IS-FUNCTION (H-FN F G X Y)) (TRUE))
Which simplifies
 with invocation of SUBSET, REL!IS-RELATION, FN!IS-FUNCTION
 when rewriting with IN-H-FN
 forward chaining using PAIR!PAIR-COMPOSITION, FN!FUNCTION-IS-RELATION
 with the assumptions PAIR!FST-PAIR, PAIR!SND-PAIR, PAIR!PAIR-IS-PAIR,
SETRULES!SUBSET-DIFF-RELATION, PAIR!IS-PAIR-BOOL, FN!IS-FUNCTION-BOOL to ...
(TRUE)
DOM-H-FN
Beginning proof of DOM-H-FN ...
(= (REL!DOM (H-FN F G X Y)) (POWERSET X))
Applying SETRULES!EXTENSIONALITY gives ...
(IF (IN E (REL!DOM (H-FN F G X Y))) (IN E (POWERSET X))
 (NOT (IN E (POWERSET X))))
Which simplifies
 when rewriting with POWERSET.DEFINITION, IN-H-FN, REL!IN-DOM
 forward chaining using PAIR!PAIR-COMPOSITION
 with the assumptions SETRULES!SUBSET-DIFF-RELATION, PAIR!IS-PAIR-BOOL,
PAIR!FST-PAIR, PAIR!SND-PAIR, PAIR!PAIR-IS-PAIR to ...
(TRUE)
APPLY-H-FN
Beginning proof of APPLY-H-FN ...
(IMPLIES (SUBSET A X)
 (= (FN!APPLY (H-FN F G X Y) A)
  (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F A))))))
Assuming FN!APPLY-DEFINITION with the
instantiations: (= F (H-FN F G X Y)) (= X A) generates ...
(IMPLIES
 (AND
  (IMPLIES
   (AND (FN!IS-FUNCTION (H-FN F G X Y)) (IN A (REL!DOM (H-FN F G X Y))))
   (IN (PAIR!PAIR A (FN!APPLY (H-FN F G X Y) A)) (H-FN F G X Y)))
  (SUBSET A X))
 (= (FN!APPLY (H-FN F G X Y) A)
  (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F A))))))
Which simplifies
 when rewriting with IN-H-FN, POWERSET.DEFINITION, DOM-H-FN, IS-FUNCTION-H-FN
 forward chaining using PAIR!PAIR-COMPOSITION, FN!FUNCTION-IS-RELATION
 with the assumptions SETRULES!SUBSET-DIFF-RELATION, PAIR!IS-PAIR-BOOL,
PAIR!FST-PAIR, PAIR!SND-PAIR, PAIR!PAIR-IS-PAIR, FN!IS-FUNCTION-BOOL to ...
(TRUE)
IS-MONOTONIC-H-FN
Beginning proof of IS-MONOTONIC-H-FN ...
(= (FIXPT!IS-MONOTONIC (H-FN F G X Y) X) (TRUE))
Invoking FIXPT!IS-MONOTONIC gives ...
(AND (IN (H-FN F G X Y) (FN!FUN (POWERSET X) (POWERSET X)))
 (ALL (A B)
  (IMPLIES (AND (SUBSET A B) (SUBSET B X))
   (SUBSET (FN!APPLY (H-FN F G X Y) A) (FN!APPLY (H-FN F G X Y) B)))))
Applying FN!IN-FUN gives ...
(AND (FN!IS-FUNCTION (H-FN F G X Y)) (= (REL!DOM (H-FN F G X Y)) (POWERSET X))
 (SUBSET (REL!RAN (H-FN F G X Y)) (POWERSET X))
 (ALL (A B)
  (IMPLIES (AND (SUBSET A B) (SUBSET B X))
   (SUBSET (FN!APPLY (H-FN F G X Y) A) (FN!APPLY (H-FN F G X Y) B)))))
Which simplifies
 when rewriting with SETRULES!DIFF-SUPERSET, SETRULES!SUBSET-INTER-LEFT,
REL!IMAGE-MONOTONIC, SUBSET.SELF, SETRULES!INTER-DIFF-LEFT,
SETRULES!SUBSET-DIFF-RIGHT, APPLY-H-FN, SUBSET.TRANSITIVE, DOM-H-FN,
IS-FUNCTION-H-FN
 forward chaining using FN!FUNCTION-IS-RELATION
 with the assumptions SETRULES!SUBSET-INTER-RELATION-1,
SETRULES!SUBSET-INTER-RELATION-2, SETRULES!SUBSET-DIFF-RELATION,
FN!IS-FUNCTION-BOOL to ...
(SUBSET (REL!RAN (H-FN F G X Y)) (POWERSET X))
Which simplifies
 with invocation of SUBSET
 when rewriting with DIFF.DEFINITION, POWERSET.DEFINITION, IN-H-FN, REL!IN-RAN
 forward chaining using PAIR!PAIR-COMPOSITION
 with the assumptions SETRULES!SUBSET-DIFF-RELATION, PAIR!IS-PAIR-BOOL,
PAIR!FST-PAIR, PAIR!SND-PAIR, PAIR!PAIR-IS-PAIR to ...
(TRUE)
A
B
SUBSET-A-X
Beginning proof of SUBSET-A-X ...
(SUBSET (A F G X Y) X)
Assuming FIXPT!FIX-IN-DOM-2 with the
instantiations: (= F (H-FN F G X Y)) (= X X) generates ...
(IMPLIES
 (IMPLIES (FIXPT!IS-MONOTONIC (H-FN F G X Y) X)
  (SUBSET (FIXPT!FIX (H-FN F G X Y)) X))
 (SUBSET (A F G X Y) X))
Invoking A gives ...
(IMPLIES
 (IMPLIES (FIXPT!IS-MONOTONIC (H-FN F G X Y) X)
  (SUBSET (FIXPT!FIX (H-FN F G X Y)) X))
 (SUBSET (FIXPT!FIX (H-FN F G X Y)) X))
Which simplifies
 when rewriting with IS-MONOTONIC-H-FN to ...
(TRUE)
SUBSET-B-Y
Beginning proof of SUBSET-B-Y ...
(SUBSET (B F G X Y) Y)
Invoking B gives ...
(SUBSET (DIFF Y (REL!IMAGE F (A F G X Y))) Y)
Which simplifies
 with the assumptions SETRULES!SUBSET-DIFF-RELATION, SUBSET-A-X to ...
(TRUE)
A-B-RELATION
Beginning proof of A-B-RELATION ...
(AND (= (A F G X Y) (DIFF X (REL!IMAGE G (B F G X Y))))
 (= (B F G X Y) (DIFF Y (REL!IMAGE F (A F G X Y)))))
Assuming FIXPT!FIX-IS-FIXEDPOINT with the
instantiations: (= F (H-FN F G X Y)) (= X X) generates ...
(IMPLIES
 (IMPLIES (FIXPT!IS-MONOTONIC (H-FN F G X Y) X)
  (= (FN!APPLY (H-FN F G X Y) (FIXPT!FIX (H-FN F G X Y)))
   (FIXPT!FIX (H-FN F G X Y))))
 (AND (= (A F G X Y) (DIFF X (REL!IMAGE G (B F G X Y))))
  (= (B F G X Y) (DIFF Y (REL!IMAGE F (A F G X Y))))))
Assuming FIXPT!FIX-IN-DOM-2 with the
instantiations: (= F (H-FN F G X Y)) (= X X) generates ...
(IMPLIES
 (AND
  (IMPLIES (FIXPT!IS-MONOTONIC (H-FN F G X Y) X)
   (SUBSET (FIXPT!FIX (H-FN F G X Y)) X))
  (IMPLIES (FIXPT!IS-MONOTONIC (H-FN F G X Y) X)
   (= (FN!APPLY (H-FN F G X Y) (FIXPT!FIX (H-FN F G X Y)))
    (FIXPT!FIX (H-FN F G X Y)))))
 (AND (= (A F G X Y) (DIFF X (REL!IMAGE G (B F G X Y))))
  (= (B F G X Y) (DIFF Y (REL!IMAGE F (A F G X Y))))))
Invoking B gives ...
(IMPLIES
 (AND
  (IMPLIES (FIXPT!IS-MONOTONIC (H-FN F G X Y) X)
   (SUBSET (FIXPT!FIX (H-FN F G X Y)) X))
  (IMPLIES (FIXPT!IS-MONOTONIC (H-FN F G X Y) X)
   (= (FN!APPLY (H-FN F G X Y) (FIXPT!FIX (H-FN F G X Y)))
    (FIXPT!FIX (H-FN F G X Y)))))
 (AND
  (= (A F G X Y) (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F (A F G X Y))))))
  (= (DIFF Y (REL!IMAGE F (A F G X Y))) (DIFF Y (REL!IMAGE F (A F G X Y))))))
Invoking A gives ...
(IMPLIES
 (AND
  (IMPLIES (FIXPT!IS-MONOTONIC (H-FN F G X Y) X)
   (SUBSET (FIXPT!FIX (H-FN F G X Y)) X))
  (IMPLIES (FIXPT!IS-MONOTONIC (H-FN F G X Y) X)
   (= (FN!APPLY (H-FN F G X Y) (FIXPT!FIX (H-FN F G X Y)))
    (FIXPT!FIX (H-FN F G X Y)))))
 (AND
  (= (FIXPT!FIX (H-FN F G X Y))
   (DIFF X (REL!IMAGE G (DIFF Y (REL!IMAGE F (FIXPT!FIX (H-FN F G X Y)))))))
  (= (DIFF Y (REL!IMAGE F (FIXPT!FIX (H-FN F G X Y))))
   (DIFF Y (REL!IMAGE F (FIXPT!FIX (H-FN F G X Y)))))))
Which simplifies
 when rewriting with APPLY-H-FN, IS-MONOTONIC-H-FN
 with the assumptions SETRULES!SUBSET-DIFF-RELATION to ...
(TRUE)
DIFF-DIFF
Beginning proof of DIFF-DIFF ...
(= (DIFF A (DIFF A B)) (INTER A B))
Applying SETRULES!EXTENSIONALITY gives ...
(IF (IN E (DIFF A (DIFF A B))) (IN E (INTER A B)) (NOT (IN E (INTER A B))))
Which simplifies
 when rewriting with INTER.DEFINITION, DIFF.DEFINITION
 with the assumptions SETRULES!SUBSET-DIFF-RELATION to ...
(TRUE)
IMAGE-F-A
Beginning proof of IMAGE-F-A ...
(IMPLIES (SUBSET (REL!RAN F) Y)
 (= (REL!IMAGE F (A F G X Y)) (DIFF Y (B F G X Y))))
Assuming A-B-RELATION with the
instantiations: (= F F) (= G G) (= X X) (= Y Y) generates ...
(IMPLIES
 (AND (= (A F G X Y) (DIFF X (REL!IMAGE G (B F G X Y))))
  (= (B F G X Y) (DIFF Y (REL!IMAGE F (A F G X Y)))) (SUBSET (REL!RAN F) Y))
 (= (REL!IMAGE F (A F G X Y)) (DIFF Y (B F G X Y))))
Substituting (= (B F G X Y) (DIFF Y (REL!IMAGE F (A F G X Y)))) produces ...
(IMPLIES
 (AND (= (A F G X Y) (DIFF X (REL!IMAGE G (B F G X Y))))
  (= (B F G X Y) (DIFF Y (REL!IMAGE F (A F G X Y)))) (SUBSET (REL!RAN F) Y))
 (= (REL!IMAGE F (A F G X Y)) (DIFF Y (DIFF Y (REL!IMAGE F (A F G X Y))))))
Assuming REL!IMAGE-SUBSET-RAN with the
instantiations: (= R F) (= X (A F G X Y)) generates ...
(IMPLIES
 (AND (SUBSET (REL!IMAGE F (A F G X Y)) (REL!RAN F))
  (= (A F G X Y) (DIFF X (REL!IMAGE G (B F G X Y))))
  (= (B F G X Y) (DIFF Y (REL!IMAGE F (A F G X Y)))) (SUBSET (REL!RAN F) Y))
 (= (REL!IMAGE F (A F G X Y)) (DIFF Y (DIFF Y (REL!IMAGE F (A F G X Y))))))
Which simplifies
 when rewriting with SETRULES!INTER-SUBSET-LEFT, SUBSET.TRANSITIVE, DIFF-DIFF
 with the assumptions SETRULES!SUBSET-INTER-RELATION-1,
SETRULES!SUBSET-INTER-RELATION-2, SETRULES!SUBSET-DIFF-RELATION, SUBSET-B-Y,
SUBSET-A-X to ...
(TRUE)
IMAGE-G-B
Beginning proof of IMAGE-G-B ...
(IMPLIES (SUBSET (REL!RAN G) X)
 (= (REL!IMAGE G (B F G X Y)) (DIFF X (A F G X Y))))
Assuming A-B-RELATION with the
instantiations: (= F F) (= G G) (= X X) (= Y Y) generates ...
(IMPLIES
 (AND (= (A F G X Y) (DIFF X (REL!IMAGE G (B F G X Y))))
  (= (B F G X Y) (DIFF Y (REL!IMAGE F (A F G X Y)))) (SUBSET (REL!RAN G) X))
 (= (REL!IMAGE G (B F G X Y)) (DIFF X (A F G X Y))))
Substituting (= (A F G X Y) (DIFF X (REL!IMAGE G (B F G X Y)))) produces ...
(IMPLIES
 (AND (= (A F G X Y) (DIFF X (REL!IMAGE G (B F G X Y))))
  (= (B F G X Y) (DIFF Y (REL!IMAGE F (DIFF X (REL!IMAGE G (B F G X Y))))))
  (SUBSET (REL!RAN G) X))
 (= (REL!IMAGE G (B F G X Y)) (DIFF X (DIFF X (REL!IMAGE G (B F G X Y))))))
Assuming REL!IMAGE-SUBSET-RAN with the
instantiations: (= R G) (= X (B F G X Y)) generates ...
(IMPLIES
 (AND (SUBSET (REL!IMAGE G (B F G X Y)) (REL!RAN G))
  (= (A F G X Y) (DIFF X (REL!IMAGE G (B F G X Y))))
  (= (B F G X Y) (DIFF Y (REL!IMAGE F (DIFF X (REL!IMAGE G (B F G X Y))))))
  (SUBSET (REL!RAN G) X))
 (= (REL!IMAGE G (B F G X Y)) (DIFF X (DIFF X (REL!IMAGE G (B F G X Y))))))
Which simplifies
 when rewriting with SETRULES!INTER-SUBSET-LEFT, SUBSET.TRANSITIVE, DIFF-DIFF
 with the assumptions SETRULES!SUBSET-INTER-RELATION-1,
SETRULES!SUBSET-INTER-RELATION-2, SETRULES!SUBSET-DIFF-RELATION, SUBSET-A-X,
SUBSET-B-Y to ...
(TRUE)
SB-FUNCTION
UNION-DIFF
Beginning proof of UNION-DIFF ...
(= (UNION A (DIFF B A)) (UNION A B))
Applying SETRULES!EXTENSIONALITY gives ...
(IF (IN E (UNION A (DIFF B A))) (IN E (UNION A B)) (NOT (IN E (UNION A B))))
Which simplifies
 when rewriting with DIFF.DEFINITION, UNION.DEFINITION
 with the assumptions SETRULES!SUBSET-UNION-RELATION-1,
SETRULES!SUBSET-UNION-RELATION-2, SETRULES!SUBSET-DIFF-RELATION to ...
(TRUE)
SCHROEDER-BERNSTEIN
Beginning proof of SCHROEDER-BERNSTEIN ...
(IMPLIES (AND (IN F (FN!INJ X Y)) (IN G (FN!INJ Y X)))
 (IN (SB-FUNCTION F G X Y) (FN!BIJ X Y)))
Applying FN!IN-INJ gives ...
(IMPLIES
 (AND (FN!IS-FUNCTION F) (FN!IS-FUNCTION (REL!INVERSE F)) (= (REL!DOM F) X)
  (SUBSET (REL!RAN F) Y) (FN!IS-FUNCTION G) (FN!IS-FUNCTION (REL!INVERSE G))
  (= (REL!DOM G) Y) (SUBSET (REL!RAN G) X))
 (IN (SB-FUNCTION F G X Y) (FN!BIJ X Y)))
Applying FN!IN-BIJ gives ...
(IMPLIES
 (AND (FN!IS-FUNCTION F) (FN!IS-FUNCTION (REL!INVERSE F)) (= (REL!DOM F) X)
  (SUBSET (REL!RAN F) Y) (FN!IS-FUNCTION G) (FN!IS-FUNCTION (REL!INVERSE G))
  (= (REL!DOM G) Y) (SUBSET (REL!RAN G) X))
 (AND (FN!IS-FUNCTION (SB-FUNCTION F G X Y))
  (FN!IS-FUNCTION (REL!INVERSE (SB-FUNCTION F G X Y)))
  (= (REL!DOM (SB-FUNCTION F G X Y)) X) (= (REL!RAN (SB-FUNCTION F G X Y)) Y)))
Invoking SB-FUNCTION gives ...
(IMPLIES
 (AND (FN!IS-FUNCTION F) (FN!IS-FUNCTION (REL!INVERSE F)) (= (REL!DOM F) X)
  (SUBSET (REL!RAN F) Y) (FN!IS-FUNCTION G) (FN!IS-FUNCTION (REL!INVERSE G))
  (= (REL!DOM G) Y) (SUBSET (REL!RAN G) X))
 (AND
  (FN!IS-FUNCTION
   (UNION (REL!DOM-RESTRICT (A F G X Y) F)
    (REL!INVERSE (REL!DOM-RESTRICT (B F G X Y) G))))
  (FN!IS-FUNCTION
   (REL!INVERSE
    (UNION (REL!DOM-RESTRICT (A F G X Y) F)
     (REL!INVERSE (REL!DOM-RESTRICT (B F G X Y) G)))))
  (=
   (REL!DOM
    (UNION (REL!DOM-RESTRICT (A F G X Y) F)
     (REL!INVERSE (REL!DOM-RESTRICT (B F G X Y) G))))
   X)
  (=
   (REL!RAN
    (UNION (REL!DOM-RESTRICT (A F G X Y) F)
     (REL!INVERSE (REL!DOM-RESTRICT (B F G X Y) G))))
   Y)))
Which simplifies
 when rewriting with UNION.COMMUTATIVE, REL!RAN-RAN-RESTRICT,
REL!RAN-DOM-RESTRICT, REL!RAN-UNION, SETRULES!UNION-SUBSET-RIGHT, UNION-DIFF,
REL!DOM-UNION, SETRULES!INTER-SUBSET-LEFT, SETRULES!INTER-DIFF-LEFT,
IMAGE-F-A, REL!INVERSE-RAN-RESTRICT, REL!INVERSE-UNION, NULLSET.DEFINITION,
SETRULES!DIFF-SUPERSET, SUBSET.SELF, SETRULES!INTER-DIFF-RIGHT, IMAGE-G-B,
REL!DOM-RAN-RESTRICT, SETRULES!INTER-SUBSET-RIGHT, REL!DOM-DOM-RESTRICT,
FN!IS-FUNCTION-RAN-RESTRICT, FN!IS-FUNCTION-DOM-RESTRICT,
FN!IS-FUNCTION-UNION, REL!INVERSE-DOM-RESTRICT
 forward chaining using FN!FUNCTION-IS-RELATION
 with the assumptions SETRULES!SUBSET-DIFF-RELATION,
SETRULES!SUBSET-INTER-RELATION-1, SETRULES!SUBSET-INTER-RELATION-2,
SETRULES!SUBSET-UNION-RELATION-1, SETRULES!SUBSET-UNION-RELATION-2,
SUBSET-B-Y, SUBSET-A-X, REL!INVERSE-INVERSE, FN!IS-FUNCTION-BOOL to ...
(TRUE)
Done.